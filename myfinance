#!/bin/bash


BASEDIR=$(dirname "$0")

server_ip=3006
client_ip=3003

server_dir="$BASEDIR/finance-server";

server_jar="$server_dir/target/finance-server-0.0.1-SNAPSHOT.jar"
client_dir="$BASEDIR/finance-client"

DATE_WITH_TIME=`date "+%Y%m%d-%H%M%S"`

server_log="$BASEDIR/logs/server/server-$DATE_WITH_TIME.log"
client_log="$BASEDIR/logs/client/client-$DATE_WITH_TIME.log"


if [ $# -eq 1 ]
then
	case $1 in
		start)

		    echo "input count: $#"
            echo "Base dir: $BASEDIR"
            echo "server ip: $server_ip"
            echo "client ip: $client_ip"

            echo "server jar $server_jar"
            echo "client dir $client_dir"

            echo "Server log: $server_log";
            echo "Client log: $client_log";

            if [ -f "$server_jar" ]
            then
                echo "Found server jar file"
            else
                echo "No server jar file found, building..."
                mvn -f "$server_dir/pom.xml" clean install
                echo "Built server jar file successfully";
            fi

			echo "Starting my finance Application!";
		
			nohup java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8888 -jar ${server_jar} > ${server_log} &
			echo $(lsof -nP -i4TCP:$server_ip | grep LISTEN | awk '{print $2}') > /opt/mad/finance/server-pid.file

			echo "Server pid $! started at port $server_ip"

			nohup npm start --prefix $client_dir > $client_log &

			echo $(lsof -nP -i4TCP:$client_ip | grep LISTEN | awk '{print $2}')  > /opt/mad/finance/client-pid.file
			
			echo "Client pid $! started at port $client_ip"
			exit;
			;;
		stop)
			echo stoping
			echo killing server @ pid $(lsof -nP -i4TCP:$server_ip | grep LISTEN | awk '{print $2}')
			#kill -9 $(cat /opt/mad/finance/server-pid.file)
			kill -9 $(lsof -nP -i4TCP:$server_ip | grep LISTEN | awk '{print $2}')

			echo killing client @ pid $(lsof -nP -i4TCP:$client_ip | grep LISTEN | awk '{print $2}')
			#kill -9 $(cat /opt/mad/finance/client-pid.file)
			kill -9 $(lsof -nP -i4TCP:$client_ip | grep LISTEN | awk '{print $2}')

			echo "stopped finance webserver"
			;;
		restart)
			echo restarting
			;;
		*)
			echo "Usage: myfinance [start|stop|restart]"
			exit;
			;;
		esac
else
	echo "Usage: myfinance [start|stop|restart]"
fi

exit;



